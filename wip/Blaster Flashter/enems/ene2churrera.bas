' ene exporter for Churrera
' generates enems.h 

Sub usage
	Print "Usage:"
	Print
	Print "$ ene2churrera enems.ene enems.h [genital] [gencounter]"
End Sub

Function inCommand (a As String) As Integer
	Dim As Integer i
	i = 1
	While (Command (i) <> "")
		If Command (i) = a Then Return -1
		i = i + 1
	Wend
	Return 0
End Function

Dim As Integer fIn, fOut
Dim As uByte d 
Dim As String dummy
Dim As Integer mapW, mapH, scrW, scrH, nEnems, mapPants, nPant, i, j, hl
Dim as uByte t, xy1, xy2, mn, s1, s2, x, y, x1, y1, x2, y2
Dim As Integer genital, gencounter
Dim As Integer typeCounters (255), enemTypeCounters (255)

Print "Churrera 3.99.9 ene2churrera ~ ";

If Command (2) = "" Then usage: End

genital = inCommand ("genital")
gencounter = inCommand ("gencounter")

fIn = FreeFile
Open Command (1) For Binary As #fIn
fOut = FreeFile
Open Command (2) For Binary As #fOut

' Deal with header
dummy = Input (256, fIn) 		' Skip filenames
Get #fIn, , d: mapW = d 		' Map width
Get #fIn, , d: mapH = d 		' Map height
Get #fIn, , d: scrW = d 		' Scr width
Get #fIn, , d: scrH = d 		' Scr height
Get #fIn, , d: nEnems = d 		' # of enems per screen

mapPants = mapW * mapH

Print #fOut, "// " & Command (2)
Print #fOut, "// Generated by ene2churrera.exe v0.1 [20180228]"
Print #fOut, "// Copyleft 2018 The Mojon Twins"
Print #fOut, ""


Print #fOut, "typedef struct {"
Print #fOut, "	int x, y;"
Print #fOut, "	unsigned char x1, y1, x2, y2;"
Print #fOut, "	char mx, my;"
Print #fOut, "	char t;"
Print #fOut, "#ifdef PLAYER_CAN_FIRE"
Print #fOut, "	unsigned char life;"
Print #fOut, "#endif"
Print #fOut, "} MALOTE;"
Print #fOut, ""

Print #fOut, "MALOTE malotes [] = {"

For i = 1 To (mapPants * nEnems)
	Get #fIn, , t
	enemTypeCounters (t) = enemTypeCounters (t) + 1
	
	Get #fIn, , x1: Get #fIn, , y1
	Get #fIn, , x2: Get #fIn, , y2

	Get #fIn, , mn
	
	Get #fIn, , s1: Get #fIn, , s2

	' Output line:
	' x, y, x1, y1, x2, y2, mx, my, t

	Print #fOut, "	{";

	Print #fOut, "" & (x1 * 16) & ", " & (y1 * 16) & ", ";
	Print #fOut, "" & (x1 * 16) & ", " & (y1 * 16) & ", ";
	Print #fOut, "" & (x2 * 16) & ", " & (y2 * 16) & ", ";
	Print #fOut, "" & (Sgn (x2 - x1) * mn) & ", " & (Sgn (y2 - y1) * mn) & ", ";	
	Print #fOut, "" & t;

	Print #fOut, "}";
	If i < (mapPants * nEnems) Then 
		Print #fOut, ", "
	Else 
		Print #fOut, ""
	End If
Next i

Print #fOut, "};"
Print #fOut, ""

If genital Then
	Print #fOut, "// Game is genital, so counted for BADDIES_COUNT are"
	Print #fOut, "// types 1, 2, 3, 4, 5, 6, 7"
	Print #fOut, ""
	Print #fOut, "#define BADDIES_COUNT " & (enemTypeCounters (1) + enemTypeCounters (2) + enemTypeCounters (3) + enemTypeCounters (4) + enemTypeCounters (5) + enemTypeCounters (6) + enemTypeCounters (7))
Else
	Print #fOut, "// Game is side-view, so counted for BADDIES_COUNT are"
	Print #fOut, "// types 1, 2, 3, 5, 6, 8, 9"
	Print #fOut, ""
	Print #fOut, "#define BADDIES_COUNT " & (enemTypeCounters (1) + enemTypeCounters (2) + enemTypeCounters (3) + enemTypeCounters (5) + enemTypeCounters (6) + enemTypeCounters (8) + enemTypeCounters (9))
End If
Print #fOut, ""

Print #fOut, "typedef struct {"
Print #fOut, "	unsigned char xy, tipo, act;"
Print #fOut, "} HOTSPOT;"
Print #fOut, ""

Print #fOut, "HOTSPOT hotspots [] = {"

	For i = 1 To mapPants
		Get #fIn, , xy1
		Get #fIn, , xy2
		xy1 = (xy1 Shl 4) Or (xy2 And 15)
		Get #fIn, , t

		Print #fOut, "	{";

		Print #fOut, "" & xy1 & ", ";
		Print #fOut, "" & t & ", ";
		Print #fOut, "0";
		
		Print #fOut, "}";

		If i < mapPants Then 
			Print #fOut, ", "
		Else
			Print #fOut, ""
		End If

		typeCounters (t) = typeCounters (t) + 1
	Next i

Print #fOut, "};"
Print #fOut, ""

For i = 0 To 255
	If typeCounters (i) <> 0 Or i = 1 then
		' Print #fOut, "// Wrote " & typecounters (i) & " hotspots of type " & i
		Print #fOut, "#define MAX_HOTSPOTS_TYPE_" & i & "	" & typeCounters (i)	
	End If
Next i

Print "DONE!"
